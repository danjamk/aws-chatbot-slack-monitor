# AWS Chatbot Slack Monitor - Environment Variables
#
# IMPORTANT: This is a template file!
# 1. Copy this file to .env: cp config/.env.example .env
# 2. Fill in your actual values in .env
# 3. Never commit .env to git (it's in .gitignore)
#
# The .env file contains secrets and should be kept secure.
# These values are deployed to AWS Secrets Manager during deployment.

# ============================================================================
# Slack Configuration (REQUIRED)
# ============================================================================
# Get these values from your Slack workspace:
# 1. Go to https://slack.com/signin
# 2. Select your workspace
# 3. Get Workspace ID from the URL: https://app.slack.com/client/T01234ABCDE/...
#    The part after /client/ is your Workspace ID
# 4. Get Channel IDs:
#    - Open Slack
#    - Right-click on channel name
#    - Select "View channel details"
#    - Channel ID is at the bottom
#
# See docs/slack-setup.md for detailed instructions

# Slack Workspace ID (format: T01234ABCDE)
SLACK_WORKSPACE_ID=T01234ABCDE

# Slack Channel ID for critical alerts (format: C01234ABCDE)
# This channel should be low-noise, only critical alerts
SLACK_CRITICAL_CHANNEL_ID=C01234ABCDE

# Slack Channel ID for heartbeat/monitoring (format: C56789FGHIJ)
# This channel can be noisy, daily reports and warnings
SLACK_HEARTBEAT_CHANNEL_ID=C56789FGHIJ

# ============================================================================
# Email Notifications (OPTIONAL)
# ============================================================================
# Comma-separated list of email addresses to receive budget alerts
# These emails will receive SNS subscription confirmation emails
# You must click the confirmation link for notifications to work
#
# Examples:
#   NOTIFICATION_EMAILS=admin@example.com
#   NOTIFICATION_EMAILS=team@example.com,admin@example.com,billing@example.com

NOTIFICATION_EMAILS=team@example.com,admin@example.com

# ============================================================================
# AWS Credentials (REQUIRED for deployment)
# ============================================================================
# These credentials are used by CDK to deploy the stack
# Create these using: bash scripts/setup-aws-iam-user.sh
#
# IMPORTANT: These should be project-specific credentials with minimal permissions
# Do NOT use your personal AWS credentials here

# AWS Access Key ID (from IAM user)
AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE

# AWS Secret Access Key (from IAM user)
AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

# Default AWS region (should match config.yaml)
AWS_DEFAULT_REGION=us-east-1

# ============================================================================
# AWS CDK Configuration (REQUIRED for deployment)
# ============================================================================
# These values tell CDK which account and region to deploy to

# Your AWS account ID (12-digit number)
# Get it with: aws sts get-caller-identity --query Account --output text
CDK_DEFAULT_ACCOUNT=123456789012

# AWS region for CDK deployment (should match AWS_DEFAULT_REGION)
CDK_DEFAULT_REGION=us-east-1

# ============================================================================
# Optional: Claude Code API Key (for development)
# ============================================================================
# If using Claude Code for AI-assisted development
# Get your API key from: https://console.anthropic.com/

# ANTHROPIC_API_KEY=sk-ant-api03-...

# ============================================================================
# Validation
# ============================================================================
# Before deploying, verify:
# 1. All REQUIRED fields are filled in
# 2. Slack IDs are correct format (T... and C...)
# 3. AWS Account ID matches your account
# 4. Email addresses are valid
# 5. File is named .env (not .env.example)
# 6. File permissions are secure: chmod 600 .env
#
# Test configuration:
#   python scripts/validate-config.py
#
# Deploy secrets to AWS:
#   python scripts/deploy-secrets.py
